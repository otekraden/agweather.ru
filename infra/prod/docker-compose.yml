version: '3.8'

services:
  backend:
    image: otekvonsoraden/agweather_backend:latest
    # container_name: backend
    restart: always
    build: 
      context: ../..
      dockerfile: Dockerfile.prod
    # ports:
    #   - ${BACKEND_PORT}:${BACKEND_PORT}
    expose:
      - ${BACKEND_PORT}
    volumes:
      - static_volume:/home/agweather/backend/static
      - media_volume:/home/agweather/backend/media
      # - static_volume:/home/backend/backend/static
      # - media_volume:/home/backend/backend/media
    env_file:
      - .env
    depends_on:
      - db
    command: gunicorn django_project.wsgi:application --bind 0.0.0.0:${BACKEND_PORT}
    # command: python manage.py runserver 0.0.0.0:${BACKEND_PORT}
    # command: "sh /backend/entrypoint.sh"

  db:
    image: postgres:15
    container_name: db
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    # pg_dump -C -h 134.0.112.35 -U anton -W agweather_db > dump_agweather_db.sql
    # docker exec -it db psql --user=anton --dbname=postgres
    # DROP DATABASE agweather_db;
    # cat dump_agweather_db.sql | docker exec -i db psql --user=anton --dbname=postgres

  selenium:
    image: selenium/standalone-chrome:latest
    container_name: selenium
    restart: always
    ports:
      - 4444:4444

  nginx:
    image: otekvonsoraden/nginx:latest
    # build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - 1337:80
    depends_on:
      - backend
    volumes:
      - static_volume:/home/agweather/backend/static
      - media_volume:/home/agweather/backend/media
      # - static_volume:/home/backend/backend/static
      # - media_volume:/home/backend/backend/media
      
volumes:
  postgres_data:
  static_volume:
  media_volume:
    